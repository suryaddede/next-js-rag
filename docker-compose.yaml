version: '3.9'

services:
  chromadb:
    image: chromadb/chroma:latest
    container_name: chromadb
    volumes:
      # Persist the database data on disk
      - ./chroma_data:/chroma/chroma
    environment:
      # Environment variables for configuring Chroma
      - ALLOW_RESET=true
      - ANONYMIZED_TELEMETRY=false
      - CHROMA_SERVER_AUTH_CREDENTIALS_PROVIDER=chromadb.auth.token.TokenAuthServerProvider
      - CHROMA_SERVER_AUTH_CREDENTIALS=admin:admin
      - CHROMA_SERVER_AUTH_PROVIDER=token
      # You can add other environment variables as needed
    ports:
      # Map container port 8000 to host port 8000
      - "8000:8000"
    restart: unless-stopped
    networks:
      - rag-network

  nextjs-app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - VOYAGE_AI_API_KEY=${VOYAGE_AI_API_KEY}
        - GOOGLE_GENERATIVE_AI_API_KEY=${GOOGLE_GENERATIVE_AI_API_KEY}
    container_name: nextjs-rag-app
    ports:
      - "3000:3000"
    environment:
      # ChromaDB connection will be through the internal network
      - CHROMA_URL=http://chromadb:8000
      # Pass API keys from .env.local
      - VOYAGE_AI_API_KEY=${VOYAGE_AI_API_KEY}
      - GOOGLE_GENERATIVE_AI_API_KEY=${GOOGLE_GENERATIVE_AI_API_KEY}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
    env_file:
      - .env.local
    depends_on:
      - chromadb
    restart: unless-stopped
    networks:
      - rag-network

networks:
  rag-network:
    driver: bridge