services:
  chromadb:
    image: chromadb/chroma:latest
    container_name: chromadb
    volumes:
      # Persist the database data on disk
      - ./chroma_data:/data
    environment:
      # Production-ready configuration
      - ALLOW_RESET=false
      - ANONYMIZED_TELEMETRY=false
      - CHROMA_SERVER_AUTH_CREDENTIALS_PROVIDER=chromadb.auth.token.TokenAuthServerProvider
      - CHROMA_SERVER_AUTH_CREDENTIALS=admin:${CHROMA_AUTH_PASSWORD:-secure_default_password}
      - CHROMA_SERVER_AUTH_PROVIDER=token
    ports:
      # Map container port 8000 to host port 8000
      - "8000:8000"
    restart: unless-stopped
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nextjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nextjs-rag-app
    ports:
      - "3000:3000"
    environment:
      # ChromaDB connection will be through the internal network
      - CHROMA_URL=http://chromadb:8000
      - NODE_ENV=${NODE_ENV:-production}
      - NEXT_TELEMETRY_DISABLED=1
    env_file:
      - .env
    depends_on:
      chromadb:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  rag-network:
    driver: bridge